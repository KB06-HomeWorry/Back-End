<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="org.scoula.user.mapper.UserMapper">

    <!-- ResultMap: UserVO -->
    <resultMap id="userMap" type="org.scoula.security.account.domain.UserVO">
        <id property="userId" column="user_id"/>
        <result property="username" column="name"/>
        <result property="email" column="email"/>
        <result property="password" column="password"/>
        <result property="phone" column="phone"/>
        <result property="userType" column="user_type"/>
    </resultMap>

    <!-- ResultMap: AuthVO -->
    <resultMap id="authMap" type="org.scoula.security.account.domain.AuthVO">
        <id property="authId" column="auth_id"/>
        <result property="userId" column="user_id"/>
        <result property="auth" column="auth"/>
    </resultMap>

    <!-- 1. 회원 단건 조회 (username) -->
    <select id="get" parameterType="string" resultMap="userMap">
        SELECT * FROM user WHERE name = #{username}
    </select>

    <!-- 2. id(=username)로 중복 체크 -->
    <select id="findByUsername" parameterType="string" resultMap="userMap">
        SELECT * FROM user WHERE name = #{username}
    </select>

    <!-- 3. 회원 정보 추가 (insertUser) -->
    <insert id="insertUser" parameterType="org.scoula.security.account.domain.UserVO" useGeneratedKeys="true" keyProperty="userId">
        INSERT INTO user (name, email, password, phone, user_type)
        VALUES (#{username}, #{email}, #{password}, #{phone}, #{userType})
    </insert>

    <!-- 4. 회원 권한 정보 추가 (insertAuth) -->
    <insert id="insertAuth" parameterType="org.scoula.security.account.domain.AuthVO" useGeneratedKeys="true" keyProperty="authId">
        INSERT INTO user_member_auth (user_id, auth)
        VALUES (#{userId}, #{auth})
    </insert>

    <!-- 5. 회원 정보 수정 (update) -->
    <update id="update" parameterType="org.scoula.security.account.domain.UserVO">
        UPDATE user
        SET
            email = #{email},
            phone = #{phone},
            user_type = #{userType}
        WHERE user_id = #{userId}
    </update>

    <!-- 6. 비밀번호 변경 (updatePassword) -->
    <update id="updatePassword" parameterType="org.scoula.user.dto.ChangePasswordDTO">
        UPDATE user
        SET password = #{newPassword}, update_date = NOW()
        WHERE user_id = #{userId}
    </update>

</mapper>